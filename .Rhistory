library(FoodSecRammer)
library(FoodSecRammer)
library(FoodSecRammer)
remove.packages("FoodSecRammer")
library("devtools")
library(devtools)
install.packages("devtools")
library(devtools)
install_github("WFP-VAM/FoodSecRammer")
library(FoodSecRammer)
install_github("WFP-VAM/FoodSecRammer")
library(devtools)
install_github(WFP-VAM/FoodSecRammer)
install_github("WFP-VAM/FoodSecRammer")
library(FoodSecRammer)
theme_vamgraphs()
library(devtools)
install_github("WFP-VAM/FoodSecRammer")
library(FoodSecRammer)
theme_vamgraphs()
library(ggplot2)
theme_vamgraphs()
theme_vamgraphs <- function(){
font <- "Open Sans"
theme_minimal() %+replace%
theme(
# grid elements
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
# text elements
plot.title = element_text(
family = font,
size = rel(1),
face = 'bold',
colour = 'black',
hjust = 0),
#subtitle elements
plot.subtitle = element_text(
family = font,
colour = 'grey',
size = rel(.8),
face = 'bold'),
#legend elements
legend.title = element_text(
family = font,
colour = 'black',
size = rel(.8),
face = 'bold'
),
# caption elements
plot.caption = element_text(
family = font,
size = rel(.6),
hjust = 1),
# axis title elements
axis.title = element_text(
family = font,
size = rel(.75),
face = 'bold'),
# axis text elements
axis.text = element_text(
family = font,
size = rel(.6)),
)
}
theme_vamgraphs <- function(){
font <- "Open Sans"
theme_minimal() %+replace%
theme(
# grid elements
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
# text elements
plot.title = element_text(
family = font,
size = rel(1),
face = 'bold',
colour = 'black',
hjust = 0),
#subtitle elements
plot.subtitle = element_text(
family = font,
colour = 'grey',
size = rel(.8),
face = 'bold'),
#legend elements
legend.title = element_text(
family = font,
colour = 'black',
size = rel(.8),
face = 'bold'
),
# caption elements
plot.caption = element_text(
family = font,
size = rel(.6),
hjust = 1),
# axis title elements
axis.title = element_text(
family = font,
size = rel(.75),
face = 'bold'),
# axis text elements
axis.text = element_text(
family = font,
size = rel(.6)),
)
}
theme_vamgraphs()
library(haven)
library(codebook)
library(labelled)
library(tidyverse)
library(sjPlot)
library(gt)
#1 - import SPSS data
data <- read_sav("01_RawData/data.sav")
library(haven)
data <- read_sav("C:/GenC31/01_RawData/data.sav")
View(data)
combined_HHAsstDescWho_barplot <- combined_HHAsstDescWho_long  %>%  ggplot(aes(fill=Modality, y=percentage, x=HHAsstDescWho)) +geom_bar(stat = "identity", position = "dodge") +theme_vamgraphs()
#Cash/Voucher
table_HHAsstCashDescWho_long <- data %>% #long tables are good for graphing
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedCashYN_1yr == 1) %>% #select only households who recieved cash/Voucher in the last 12 months
count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho)) %>%  #this is unweight, to add weight variable - count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "cash/voucher")
table_HHAsstCashDescWho_wide <- data %>% #wide tables are good for reporting i.e presenting as tables
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedCashYN_1yr == 1) %>% #select only households who recieved cash/Voucher in the last 12 months
count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho)) %>%  #this is unweight, to add weight variable - count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
pivot_wider(names_from = HHAsstCashDescWho_lab,
values_from = percentage,
values_fill = list(percentage = 0)) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "cash/voucher") %>%
select("Modality", "Women", "Men", "Both together")
#In kind
table_HHAsstInKindDescWho_long <- data %>% #long tables are good for graphing
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedInKindYN_1yr == 1) %>% #select only households who recieved food in the last 12 months
count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho)) %>%  #this is unweighted, to add weight variable - count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "food")
table_HHAsstInKindDescWho_wide <- data %>% #wide tables are good for reporting i.e presenting as tables
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedInKindYN_1yr == 1) %>% #select only households who recieved food in the last 12 months
count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho)) %>%  #this is unweighted, to add weight variable - count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
pivot_wider(names_from = HHAsstInKindDescWho_lab,
values_from = percentage,
values_fill = list(perc = 0)) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "food") %>%
select("Modality", "Women", "Men", "Both together")
#combine long tables and make reporting graph
table_HHAsstCashDescWho_long <- table_HHAsstCashDescWho_long %>% rename(HHAsstDescWho = HHAsstCashDescWho_lab)
table_HHAsstInKindDescWho_long <- table_HHAsstInKindDescWho_long %>% rename(HHAsstDescWho = HHAsstInKindDescWho_lab)
combined_HHAsstDescWho_long <- bind_rows(table_HHAsstCashDescWho_long, table_HHAsstInKindDescWho_long)
combined_HHAsstDescWho_barplot <- combined_HHAsstDescWho_long  %>%  ggplot(aes(fill=Modality, y=percentage, x=HHAsstDescWho)) +geom_bar(stat = "identity", position = "dodge") +theme_vamgraphs()
data <- read_sav("C:/GenC31/01_RawData/data.sav")
library(haven)
library(codebook)
library(labelled)
library(tidyverse)
library(sjPlot)
library(gt)
#1 - import SPSS data
data <- read_sav("01_RawData/data.sav")
#2 - make data dictionary with sjPlot - this wont be in the code loaded for github but its good to use
view_df(data)
#3 - calculate percent households that responded decisions about the use of food/cash/vouchers is made by women, men or both
#to do this you have to exclude households are single/widowed/divorced and exclude households that did not recieve cash/voucher or inkind
#Cash/Voucher
table_HHAsstCashDescWho_long <- data %>% #long tables are good for graphing
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedCashYN_1yr == 1) %>% #select only households who recieved cash/Voucher in the last 12 months
count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho)) %>%  #this is unweight, to add weight variable - count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "cash/voucher")
table_HHAsstCashDescWho_wide <- data %>% #wide tables are good for reporting i.e presenting as tables
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedCashYN_1yr == 1) %>% #select only households who recieved cash/Voucher in the last 12 months
count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho)) %>%  #this is unweight, to add weight variable - count(HHAsstCashDescWho_lab = to_character(HHAsstCashDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
pivot_wider(names_from = HHAsstCashDescWho_lab,
values_from = percentage,
values_fill = list(percentage = 0)) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "cash/voucher") %>%
select("Modality", "Women", "Men", "Both together")
#In kind
table_HHAsstInKindDescWho_long <- data %>% #long tables are good for graphing
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedInKindYN_1yr == 1) %>% #select only households who recieved food in the last 12 months
count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho)) %>%  #this is unweighted, to add weight variable - count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "food")
table_HHAsstInKindDescWho_wide <- data %>% #wide tables are good for reporting i.e presenting as tables
filter(HHHStatus == 200 | HHHStatus == 300 | HHHStatus_single == 0) %>% #select only households that are Married monogamous, Polygamous married, or other status but not single
filter(HHAsstWFPReceivedInKindYN_1yr == 1) %>% #select only households who recieved food in the last 12 months
count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho)) %>%  #this is unweighted, to add weight variable - count(HHAsstInKindDescWho_lab = to_character(HHAsstInKindDescWho), wt = WeightHH)
mutate(percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
pivot_wider(names_from = HHAsstInKindDescWho_lab,
values_from = percentage,
values_fill = list(perc = 0)) %>%
mutate_if(is.numeric, round, 0) %>%
mutate(Modality = "food") %>%
select("Modality", "Women", "Men", "Both together")
#combine long tables and make reporting graph
table_HHAsstCashDescWho_long <- table_HHAsstCashDescWho_long %>% rename(HHAsstDescWho = HHAsstCashDescWho_lab)
table_HHAsstInKindDescWho_long <- table_HHAsstInKindDescWho_long %>% rename(HHAsstDescWho = HHAsstInKindDescWho_lab)
combined_HHAsstDescWho_long <- bind_rows(table_HHAsstCashDescWho_long, table_HHAsstInKindDescWho_long)
combined_HHAsstDescWho_barplot <- combined_HHAsstDescWho_long  %>%  ggplot(aes(fill=Modality, y=percentage, x=HHAsstDescWho)) +geom_bar(stat = "identity", position = "dodge") +theme_vamgraphs()
combined_HHAsstDescWho_barplot <- combined_HHAsstDescWho_long  %>%  ggplot(aes(fill=Modality, y=percentage, x=HHAsstDescWho)) +geom_bar(stat = "identity", position = "dodge") +theme_vamgraphs()
combined_HHAsstDescWho_barplot
library(FoodSecRammer)
library(FoodSecRammer)
library(FoodSecRammer)
library(FoodSecRammer)
library(FoodSecRammer)
